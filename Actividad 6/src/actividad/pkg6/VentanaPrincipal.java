/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package actividad.pkg6;

import java.io.File;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.lang.NumberFormatException;

public class VentanaPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form VentanaPrincipal
     */
    public VentanaPrincipal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        nombreText = new javax.swing.JTextField();
        contactoText = new javax.swing.JTextField();
        crearButtom = new javax.swing.JButton();
        leerButtom = new javax.swing.JButton();
        actualizarButtom = new javax.swing.JButton();
        borrarButtom = new javax.swing.JButton();
        mensajeText = new javax.swing.JLabel();

        jButton2.setText("jButton2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Nombre:");

        jLabel2.setText("Contacto:");

        nombreText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreTextActionPerformed(evt);
            }
        });

        crearButtom.setText("Crear");
        crearButtom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crearButtomActionPerformed(evt);
            }
        });

        leerButtom.setText("Leer");
        leerButtom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leerButtomActionPerformed(evt);
            }
        });

        actualizarButtom.setText("Actualizar");
        actualizarButtom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizarButtomActionPerformed(evt);
            }
        });

        borrarButtom.setText("Borrar");
        borrarButtom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarButtomActionPerformed(evt);
            }
        });

        mensajeText.setText("  ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(contactoText)
                            .addComponent(nombreText)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(crearButtom)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(leerButtom)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(actualizarButtom)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(borrarButtom))
                            .addComponent(mensajeText))))
                .addContainerGap(44, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nombreText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(contactoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(mensajeText)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(crearButtom)
                    .addComponent(leerButtom)
                    .addComponent(actualizarButtom)
                    .addComponent(borrarButtom))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nombreTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombreTextActionPerformed

    private void crearButtomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crearButtomActionPerformed
        // TODO add your handling code here:
        mensajeText.setText("");
        if(nombreText.getText().isEmpty() || contactoText.getText().isEmpty()){
            mensajeText.setText("Porporcione un contacto para crear!");
        }
        else{
        try {

			String newName = nombreText.getText();
			long newNumber = Integer.parseInt(contactoText.getText());

			String nameNumberString;
			String name;
			long number;
			int index;

			File file = new File("C:\\Users\\user\\OneDrive\\Escritorio\\friendsContact.txt");

			if (!file.exists()) {
				file.createNewFile();
			}


			RandomAccessFile raf = new RandomAccessFile(file, "rw");
			boolean found = false;

			while (raf.getFilePointer() < raf.length()) {

				nameNumberString = raf.readLine();

				String[] lineSplit = nameNumberString.split("!");

				name = lineSplit[0];
				number = Long.parseLong(lineSplit[1]);

				if (name == newName || number == newNumber) {
					found = true;
					break;
				}
			}

			if (found == false) {

				nameNumberString = newName + "!" + String.valueOf(newNumber);

				raf.writeBytes(nameNumberString);

				raf.writeBytes(System.lineSeparator());

				mensajeText.setText("Guardado correctamente!");
                                nombreText.setText("");
                                contactoText.setText("");
                                
				raf.close();
			}
			else {

				raf.close();

				mensajeText.setText("Este contacto ya existe!");
                                
			}
		}

		catch (IOException ioe) {

			System.out.println(ioe);
		}
		catch (NumberFormatException nef) {

			System.out.println(nef);
		}
        }
    }//GEN-LAST:event_crearButtomActionPerformed

    private void leerButtomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leerButtomActionPerformed
        // TODO add your handling code here:
        mensajeText.setText("");
        String contactos = "";
        try {
 
            String nameNumberString;
            String name;
            long number;
            int index;
            
            File file = new File("C:\\Users\\user\\OneDrive\\Escritorio\\friendsContact.txt");
 
            if (!file.exists()) {
                
                file.createNewFile();
            }

            RandomAccessFile raf
                = new RandomAccessFile(file, "rw");
            boolean found = false;
 
            while (raf.getFilePointer() < raf.length()) {
 

                nameNumberString = raf.readLine();

                String[] lineSplit
                    = nameNumberString.split("!");
 
                name = lineSplit[0];
                number = Long.parseLong(lineSplit[1]);
                
                contactos = contactos + "Nombre: " + name + " - Numero: " + number + "\n";
 
            }
        }
        catch (IOException ioe)
        {
            System.out.println(ioe);
        }
        catch (NumberFormatException nef)
        {
            System.out.println(nef);
        }
        VentanaLeer ventanaLeer = new VentanaLeer(contactos);
        ventanaLeer.setVisible(true);
    }//GEN-LAST:event_leerButtomActionPerformed

    private void actualizarButtomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizarButtomActionPerformed
        // TODO add your handling code here:
        mensajeText.setText("");
        if(nombreText.getText().isEmpty() || contactoText.getText().isEmpty()){
            mensajeText.setText("Porporcione el contacto que va actualizar!");
        }
        else{
        try{
            String newName = nombreText.getText();
 
            long newNumber = Integer.parseInt(contactoText.getText());
 
            String nameNumberString;
            String name;
            long number;
            int index;
 
            File file = new File("C:\\Users\\user\\OneDrive\\Escritorio\\friendsContact.txt");
 
            if (!file.exists()) {
 
                file.createNewFile();
            }
 
            RandomAccessFile raf
                = new RandomAccessFile(file, "rw");
            boolean found = false;
 
            while (raf.getFilePointer() < raf.length()) {
 
                nameNumberString = raf.readLine();
 
                String[] lineSplit = nameNumberString.split("!");
 
                name = lineSplit[0];
                number = Long.parseLong(lineSplit[1]);
 
                if (name == newName || number == newNumber) {
                    found = true;
                    break;
                }
            }
            if(found == true){
                VentanaActualizar ventanaActualizar = new VentanaActualizar(nombreText.getText(), Long.parseLong(contactoText.getText()));
                ventanaActualizar.setVisible(true);
                nombreText.setText("");
                contactoText.setText("");
            }
            else{
                raf.close();
                mensajeText.setText("El contacto no existe!");
            }
        }
        catch (IOException ioe) {
        System.out.println(ioe);
        }
 
        catch (NumberFormatException nef) {
            System.out.println(nef);
        }
           
        }
        
    }//GEN-LAST:event_actualizarButtomActionPerformed

    private void borrarButtomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarButtomActionPerformed
        // TODO add your handling code here:
        mensajeText.setText("");
        if(nombreText.getText().isEmpty() || contactoText.getText().isEmpty()){
            mensajeText.setText("Porporcione un contacto para crear!");
        }
        else{
            try {
 
            // Get the name of the contact to be updated
            // from the Command line argument
            String newName = nombreText.getText();
 
            String nameNumberString;
            String name;
            long number;
            int index;
 
            // Using file pointer creating the file.
            File file = new File("C:\\Users\\user\\OneDrive\\Escritorio\\friendsContact.txt");
 
            if (!file.exists()) {
 
                // Create a new file if not exists.
                file.createNewFile();
            }
 
            // Opening file in reading and write mode.
            RandomAccessFile raf = new RandomAccessFile(file, "rw");
            boolean found = false;
 
            // Checking whether the name of contact exists.
            // getFilePointer() give the current offset
            // value from start of the file.
            while (raf.getFilePointer() < raf.length()) {
 
                // reading line from the file.
                nameNumberString = raf.readLine();
 
                // splitting the string to get name and
                // number
                String[] lineSplit
                    = nameNumberString.split("!");
 
                // separating name and number.
                name = lineSplit[0];
                number = Long.parseLong(lineSplit[1]);
 
                // if condition to find existence of record.
                if (name.equals(newName)) {
                    found = true;
                    break;
                }
            }
 
            // Delete the contact if record exists.
            if (found == true) {
 
                // Creating a temporary file
                // with file pointer as tmpFile.
                File tmpFile = new File("C:\\Users\\user\\OneDrive\\Escritorio\\temp.txt");
 
                // Opening this temporary file
                // in ReadWrite Mode
                RandomAccessFile tmpraf = new RandomAccessFile(tmpFile, "rw");
 
                // Set file pointer to start
                raf.seek(0);
 
                // Traversing the friendsContact.txt file
                while (raf.getFilePointer()
                       < raf.length()) {
 
                    // Reading the contact from the file
                    nameNumberString = raf.readLine();
 
                    index = nameNumberString.indexOf('!');
                    name = nameNumberString.substring(0, index);
 
                    // Check if the fetched contact
                    // is the one to be deleted
                    if (name.equals(newName)) {
 
                        // Skip inserting this contact
                        // into the temporary file
                        continue;
                    }
 
                    // Add this contact in the temporary
                    // file
                    tmpraf.writeBytes(nameNumberString);
 
                    // Add the line separator in the
                    // temporary file
                    tmpraf.writeBytes(
                        System.lineSeparator());
                }
 
                // The contact has been deleted now
                // So copy the updated content from
                // the temporary file to original file.
 
                // Set both files pointers to start
                raf.seek(0);
                tmpraf.seek(0);
 
                // Copy the contents from
                // the temporary file to original file.
                while (tmpraf.getFilePointer()
                       < tmpraf.length()) {
                    raf.writeBytes(tmpraf.readLine());
                    raf.writeBytes(System.lineSeparator());
                }
 
                // Set the length of the original file
                // to that of temporary.
                raf.setLength(tmpraf.length());
 
                // Closing the resources.
                tmpraf.close();
                raf.close();
 
                // Deleting the temporary file
                tmpFile.delete();
                
                nombreText.setText("");
                contactoText.setText("");
                mensajeText.setText("Se elimino correctamente!");
            }
 
            // The contact to be deleted
            // could not be found
            else {
 
                // Closing the resources.
                raf.close();
 
                // Print the message
                mensajeText.setText("Ese contacto no existe!");
            }
        }
 
        catch (IOException ioe) {
            System.out.println(ioe);
        }
        }
        
    }//GEN-LAST:event_borrarButtomActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actualizarButtom;
    private javax.swing.JButton borrarButtom;
    private javax.swing.JTextField contactoText;
    private javax.swing.JButton crearButtom;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton leerButtom;
    private javax.swing.JLabel mensajeText;
    private javax.swing.JTextField nombreText;
    // End of variables declaration//GEN-END:variables
}
